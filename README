xv6 是个 Unix v6符合现在cpu架构的实现的多核操作系统;相对简单,但功能完善包含进程调度,虚拟内存,陷阱,文件系统
等现代操作系统的主要特点.是个好的入门os. 相对的,linux 0.11代码太古老,很多代码都跑不起来了.且是个单核的.用到了老的架构. 比如进程切换,还是使用的硬件切换.现在操作系统都是用的软切换了.
阅读OS要求良好的c语言,汇编,和编译器的连接脚本,riscv硬件知识.
xv6的阅读顺序:
1. 初始化: entry.S(内核栈初始化) -> start.c(硬件设置) -> main.c(内核初始化) 难度:中(需要硬件知识)
2. 内存管理: memlayout.h(内存布局难点在于区分用户态,虚拟,物理)kalloc.c(物理内存分配) ->vm.c(虚拟内存管理和软映射,内核态和用户态互操作) 难度:中 (需要连接器知识,精通c语言知识)
3. 陷阱(系统调用,异常,中断):trampoline.S trap.c kernel.S syscall.c  难度:高(多核并发异步,每个cpu有自己的异步中断,还有多CPU并发跟进程调度耦合)
4. 进程调度: proc.c  exec.c 难度:高 (多核并发异步,)
5. 文件系统: fs.c file.h 难度: 中 (比较独立,并发)
6. 驱动: ... 难度: 中高(需要硬件知识,并发,配合中断,文件系统xv6只有一个软设备console,其会被注册成设备文件) // 参考: https://blog.csdn.net/zzy980511/article/details/131288968
7. user目录: .... 难度: 低(其会涉及一些OS的第一个进程 init)

xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix
Version 6 (v6).  xv6 loosely follows the structure and style of v6,
but is implemented for a modern RISC-V multiprocessor using ANSI C.

ACKNOWLEDGMENTS

xv6 is inspired by John Lions's Commentary on UNIX 6th Edition (Peer
to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14,
2000)).  See also https://pdos.csail.mit.edu/6.1810/, which provides
pointers to on-line resources for v6.

The following people have made contributions: Russ Cox (context switching,
locking), Cliff Frey (MP), Xiao Yu (MP), Nickolai Zeldovich, and Austin
Clements.

We are also grateful for the bug reports and patches contributed by
Takahiro Aoyagi, Marcelo Arroyo, Silas Boyd-Wickizer, Anton Burtsev,
carlclone, Ian Chen, Dan Cross, Cody Cutler, Mike CAT, Tej Chajed,
Asami Doi,Wenyang Duan, eyalz800, Nelson Elhage, Saar Ettinger, Alice
Ferrazzi, Nathaniel Filardo, flespark, Peter Froehlich, Yakir Goaron,
Shivam Handa, Matt Harvey, Bryan Henry, jaichenhengjie, Jim Huang,
Matúš Jókay, John Jolly, Alexander Kapshuk, Anders Kaseorg, kehao95,
Wolfgang Keller, Jungwoo Kim, Jonathan Kimmitt, Eddie Kohler, Vadim
Kolontsov, Austin Liew, l0stman, Pavan Maddamsetti, Imbar Marinescu,
Yandong Mao, Matan Shabtay, Hitoshi Mitake, Carmi Merimovich, Mark
Morrissey, mtasm, Joel Nider, Hayato Ohhashi, OptimisticSide,
phosphagos, Harry Porter, Greg Price, RayAndrew, Jude Rich, segfault,
Ayan Shafqat, Eldar Sehayek, Yongming Shen, Fumiya Shigemitsu, snoire,
Taojie, Cam Tenny, tyfkda, Warren Toomey, Stephen Tu, Alissa Tung,
Rafael Ubal, Amane Uehara, Pablo Ventura, Xi Wang, WaheedHafez,
Keiichi Watanabe, Lucas Wolf, Nicolas Wolovick, wxdao, Grant Wu, x653,
Jindong Zhang, Icenowy Zheng, ZhUyU1997, and Zou Chang Wei.

ERROR REPORTS

Please send errors and suggestions to Frans Kaashoek and Robert Morris
(kaashoek,rtm@mit.edu).  The main purpose of xv6 is as a teaching
operating system for MIT's 6.1810, so we are more interested in
simplifications and clarifications than new features.

BUILDING AND RUNNING XV6

You will need a RISC-V "newlib" tool chain from
https://github.com/riscv/riscv-gnu-toolchain, and qemu compiled for
riscv64-softmmu.  Once they are installed, and in your shell
search path, you can run "make qemu".
